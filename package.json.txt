{
  "name": "learn.js.ru_28112020",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.11.4",
    "@testing-library/react": "^11.1.0",
    "@testing-library/user-event": "^12.1.10",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "react-scripts": "4.0.1",
    "web-vitals": "^0.2.4"
  },
  "devDependencies": { // пороизводит форматирование кода для единого синтаксиса и стиля
    "husky": "^4.3.0", // пороизводит форматирование кода для единого синтаксиса и стиля
    "prettier": "^2.2.1", // пороизводит форматирование кода для единого синтаксиса и стиля
    "pretty-quick": "^3.1.0" // пороизводит форматирование кода для единого синтаксиса и стиля
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --started" // Вызов pretty перед комитом
    }
  },
  "scripts": {
    "start": "react-scripts start", // для работы в дев режиме
    "build": "react-scripts build", // для сборки нашего приложения в продакшен
    "test": "react-scripts test", // для тестирования нашего приложения
    "eject": "react-scripts eject" // позволяет перевести дополнительные модули типа babel webPack в ручную настройку
    // их конфиги выподают в корень проекта и мы начитаем их сами конфигурировать.
  },
  "eslintConfig": { // берет из react-app все еслинтовые правила
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": { // используется бабелем и webpack  для того чтобы знать для каких браузеров рендерить
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}


/* обозначение правил броузеров для browserList начало
You can specify the browser and Node.js versions by queries (case insensitive):

defaults: Browserslist’s default browsers (> 0.5%, last 2 versions, Firefox ESR, not dead).
> 5%: browsers versions selected by global usage statistics. >=, < and <= work too.
> 5% in US: uses USA usage statistics. It accepts two-letter country code.
> 5% in alt-AS: uses Asia region usage statistics. List of all region codes can be found at caniuse-lite/data/regions.
> 5% in my stats: uses custom usage data.
> 5% in browserslist-config-mycompany stats: uses custom usage data from browserslist-config-mycompany/browserslist-stats.json.
cover 99.5%: most popular browsers that provide coverage.
cover 99.5% in US: same as above, with two-letter country code.
cover 99.5% in my stats: uses custom usage data.
dead: browsers without official support or updates for 24 months. Right now it is IE 10, IE_Mob 11, BlackBerry 10, BlackBerry 7, Samsung 4 and OperaMobile 12.1.
last 2 versions: the last 2 versions for each browser.
last 2 Chrome versions: the last 2 versions of Chrome browser.
last 2 major versions or last 2 iOS major versions: all minor/patch releases of last 2 major versions.
node 10 and node 10.4: selects latest Node.js 10.x.x or 10.4.x release.
current node: Node.js version used by Browserslist right now.
maintained node versions: all Node.js versions, which are still maintained by Node.js Foundation.
iOS 7: the iOS browser version 7 directly.
Firefox > 20: versions of Firefox newer than 20. >=, < and <= work too. It also works with Node.js.
ie 6-8: selects an inclusive range of versions.
Firefox ESR: the latest [Firefox ESR] version.
PhantomJS 2.1 and PhantomJS 1.9: selects Safari versions similar to PhantomJS runtime.
extends browserslist-config-mycompany: take queries from browserslist-config-mycompany npm package.
supports es6-module: browsers with support for specific features. es6-module here is the feat parameter at the URL of the Can I Use page. A list of all available features can be found at caniuse-lite/data/features.
since 2015 or last 2 years: all versions released since year 2015 (also since 2015-03 and since 2015-03-10).
unreleased versions or unreleased Chrome versions: alpha and beta versions.
not ie <= 8: exclude browsers selected by previous queries.
You can add not to any query.

*/
